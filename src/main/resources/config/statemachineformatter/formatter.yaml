- state: 'start'
  actions:
    - input: 'space'
      command: 'Empty'
      nextstate: 'start'
    - input: 'spaces'
      command: 'Empty'
      nextstate: 'start'
    - input: 'newline'
      command: 'Empty'
      nextstate: 'start'
    - input: null
      command: 'WriteFirstSymbol'
      nextstate: 'default'
    - input: 'openbrace'
      command: 'OpenBraceInStartLine'
      nextstate: 'start'
    - input: 'carriagereturn'
      command: 'Empty'
      nextstate: 'start'
    - input: 'closebrace'
      command: 'CloseBraceInStartLine'
      nextstate: 'start'
    - input: 'onelinecomment'
      command: 'WriteLexeme'
      nextstate: 'writeonelinecomment'
    - input: 'openmultilinecomment'
      command: 'WriteLexeme'
      nextstate: 'writemulticomment'
    - input: 'closemultilinecomment'
      command: 'Empty'
      nextstate: 'start'
    - input: 'quotemark'
      command: 'WriteLexeme'
      nextstate: 'stringliteral'
    - input: 'for'
      command: 'WriteLexeme'
      nextstate: 'for'
- state: 'default'
  actions:
    - input: null
      command: 'WriteLexeme'
      nextstate: 'default'
    - input: 'semicolon'
      command: 'Semicolon'
      nextstate: 'start'
    - input: 'newline'
      command: 'Empty'
      nextstate: 'default'
    - input: 'carriagereturn'
      command: 'Empty'
      nextstate: 'default'
    - input: 'openbrace'
      command: 'OpenBraceInStroke'
      nextstate: 'start'
    - input: 'closebrace'
      command: 'CloseBraceInStroke'
      nextstate: 'start'
    - input: 'onelinecomment'
      command: 'WriteLexeme'
      nextstate: 'writeonelinecomment'
    - input: 'openmultilinecomment'
      command: 'WriteLexeme'
      nextstate: 'writemulticomment'
    - input: 'closemultilinecomment'
      command: 'Empty'
      nextstate: 'default'
    - input: 'quotemark'
      command: 'WriteLexeme'
      nextstate: 'stringliteral'
    - input: 'for'
      command: 'WriteLexeme'
      nextstate: 'for'
- state: 'writeonelinecomment'
  actions:
    - input: null
      command: 'WriteLexeme'
      nextstate: 'writeonelinecomment'
    - input: 'carriagereturn'
      command: 'Empty'
      nextstate: 'writeonelinecomment'
    - input: 'newline'
      command: 'WriteNewLine'
      nextstate: 'start'
- state: 'writemulticomment'
  actions:
    - input: null
      command: 'WriteLexeme'
      nextstate: 'writemulticomment'
    - input: 'newline'
      command: 'WriteNewLine'
      nextstate: 'writemulticomment'
    - input: 'carriagereturn'
      command: 'Empty'
      nextstate: 'writemulticomment'
    - input: 'closemultilinecomment'
      command: 'EndMultiComment'
      nextstate: 'start'
- state: 'stringliteral'
  actions:
    - input: null
      command: 'WriteLexeme'
      nextstate: 'stringliteral'
    - input: 'newline'
      command: 'WriteNewLine'
      nextstate: 'stringliteral'
    - input: 'carriagereturn'
      command: 'Empty'
      nextstate: 'stringliteral'
    - input: 'quotemark'
      command: 'WriteLexeme'
      nextstate: 'default'
- state: 'for'
  actions:
    - input: null
      command: 'WriteLexeme'
      nextstate: 'for'
    - input: 'newline'
      command: 'Empty'
      nextstate: 'for'
    - input: 'carriagereturn'
      command: 'Empty'
      nextstate: 'for'
    - input: 'closebracket'
      command: 'WriteLexeme'
      nextstate: 'default'